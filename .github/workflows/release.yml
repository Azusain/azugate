name: Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          pkg-config \
          libssl-dev \
          zlib1g-dev \
          libboost-all-dev \
          libyaml-cpp-dev \
          nlohmann-json3-dev \
          libspdlog-dev \
          libfmt-dev

    - name: Install vcpkg dependencies
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        ./vcpkg/bootstrap-vcpkg.sh
        ./vcpkg/vcpkg install \
          cxxopts \
          jwt-cpp \
          gtest

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake \
          -G Ninja

    - name: Build
      run: cmake --build build --config Release

    - name: Create package
      run: |
        cd build
        cpack -G DEB
        cpack -G TGZ

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: azugate-linux-x64
        path: |
          build/*.deb
          build/*.tar.gz

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        brew update
        brew install \
          cmake \
          ninja \
          boost \
          yaml-cpp \
          nlohmann-json \
          spdlog \
          fmt \
          cxxopts \
          openssl@3

    - name: Install vcpkg dependencies
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        ./vcpkg/bootstrap-vcpkg.sh
        ./vcpkg/vcpkg install \
          jwt-cpp \
          gtest

    - name: Configure CMake
      run: |
        export OPENSSL_ROOT_DIR=$(brew --prefix openssl@3)
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DOPENSSL_ROOT_DIR=$OPENSSL_ROOT_DIR \
          -G Ninja

    - name: Build
      run: cmake --build build --config Release

    - name: Create package
      run: |
        cd build
        cpack -G TGZ

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: azugate-macos-x64
        path: build/*.tar.gz

  build-windows:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install vcpkg dependencies
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
        .\vcpkg\vcpkg.exe install `
          boost-asio:x64-windows `
          boost-thread:x64-windows `
          boost-system:x64-windows `
          boost-url:x64-windows `
          yaml-cpp:x64-windows `
          nlohmann-json:x64-windows `
          spdlog:x64-windows `
          fmt:x64-windows `
          cxxopts:x64-windows `
          jwt-cpp:x64-windows `
          gtest:x64-windows `
          openssl:x64-windows `
          zlib:x64-windows

    - name: Configure CMake
      run: |
        cmake -B build `
          -DCMAKE_BUILD_TYPE=Release `
          -DCMAKE_TOOLCHAIN_FILE=.\vcpkg\scripts\buildsystems\vcpkg.cmake `
          -DVCPKG_TARGET_TRIPLET=x64-windows

    - name: Build
      run: cmake --build build --config Release

    - name: Create package
      run: |
        cd build
        cpack -G ZIP
        cpack -G WIX

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: azugate-windows-x64
        path: |
          build/*.zip
          build/*.msi

  create-release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          azugate-linux-x64/*
          azugate-macos-x64/*
          azugate-windows-x64/*
        draft: false
        prerelease: false
        body: |
          # AzuGate v1.1.1 - GitHub Actions Update

          ## üîß Bug Fixes & Improvements
          - **Updated GitHub Actions artifacts**: Upgraded from v3 to v4 for compatibility
          - **Fixed CI/CD pipeline**: Resolved deprecation warnings in release automation
          - **Improved release reliability**: Enhanced artifact handling and workflow stability

          ## üì¶ Package Manager Support (Inherited from v1.1.0)
          - **üç∫ Homebrew (macOS/Linux)**: Formula with service management and dependency resolution
          - **üìã APT (Ubuntu/Debian)**: Complete `.deb` packaging with systemd integration
          - **‚ö° One-line installer**: `curl -fsSL https://raw.githubusercontent.com/Azusain/azugate/main/install.sh | bash`
          - **üöÄ Automated builds**: Multi-platform releases via GitHub Actions

          ## üõ†Ô∏è Enhanced Features (From Previous Releases)
          - **File proxy routing fixes**: Resolved protocol type matching problems
          - **Encoding improvements**: ASCII icons for better console compatibility
          - **Systemd service** with security hardening and proper user isolation
          - **Service management** integration (`systemctl`, `brew services`)
          - **Configuration management** with proper file permissions
          - **Comprehensive documentation** with troubleshooting guides

          ## üì• Installation Methods

          ### Quick Install (Recommended)
          ```bash
          # Auto-detect OS and install
          curl -fsSL https://raw.githubusercontent.com/Azusain/azugate/main/install.sh | bash
          ```

          ### Package Managers
          ```bash
          # Homebrew (macOS/Linux)
          brew install https://raw.githubusercontent.com/Azusain/azugate/main/Formula/azugate.rb

          # APT (Ubuntu/Debian) 
          wget https://github.com/Azusain/azugate/releases/download/v1.1.1/azugate_1.1.1-1_amd64.deb
          sudo dpkg -i azugate_1.1.1-1_amd64.deb

          # Windows MSI
          # Download azugate-1.1.1-win64.msi and run installer

          # Manual installation
          # Download appropriate .tar.gz/.zip for your platform
          ```

          ## üì¶ Available Packages
          - **Linux**: `.deb` (APT) and `.tar.gz` (manual)
          - **macOS**: `.tar.gz` (Homebrew/manual)
          - **Windows**: `.msi` (installer) and `.zip` (portable)

          ## üéØ Usage Examples
          ```bash
          # Generate config
          azugate --generate-config azugate.yaml

          # Start file proxy
          azugate --enable-file-proxy -d /path/to/serve

          # Use as system service (APT installations)
          sudo systemctl start azugate
          sudo systemctl enable azugate
          ```

          ## üìö Documentation
          - **Installation Guide**: [PACKAGING.md](https://github.com/Azusain/azugate/blob/main/PACKAGING.md)
          - **Main README**: [README.md](https://github.com/Azusain/azugate/blob/main/README.md)
          - **Issues**: [GitHub Issues](https://github.com/Azusain/azugate/issues)

          ---
          
          **Note**: This release does NOT include gRPC support. AzuGate focuses on HTTP proxy and file serving capabilities with command-line configuration.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    needs: create-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Update Homebrew Formula
      run: |
        echo "Homebrew formula update would happen here"
        echo "This requires setting up a homebrew-tap repository"
        echo "Version: ${GITHUB_REF#refs/tags/}"
